{
    "Comment": "Data Processing Workflow with Error Handling",
    "StartAt": "ValidateInput",
    "States": {
        "ValidateInput": {
            "Type": "Task",
            "Resource": "${ValidationLambdaArn}",
            "InputPath": "$.data",
            "ResultPath": "$.validationResult",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 3,
                    "BackoffRate": 2
                },
                {
                    "ErrorEquals": [
                        "ValidationError"
                    ],
                    "MaxAttempts": 0
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "ValidationError"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleValidationError"
                },
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleSystemError"
                }
            ],
            "End": true
        },
        "HandleValidationError": {
            "Type": "Task",
            "Resource": "${ErrorHandlerArn}",
            "Parameters": {
                "error.$": "$.error",
                "type": "VALIDATION_ERROR",
                "workflow": "${WorkflowName}",
                "originalInput.$": "$.data"
            },
            "End": true
        },
        "HandleSystemError": {
            "Type": "Task",
            "Resource": "${ErrorHandlerArn}",
            "Parameters": {
                "error.$": "$.error",
                "type": "SYSTEM_ERROR",
                "workflow": "${WorkflowName}",
                "originalInput.$": "$"
            },
            "End": true
        }
    }
}